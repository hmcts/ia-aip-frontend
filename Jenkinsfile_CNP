#!groovy
properties(
    [[$class: 'GithubProjectProperty', projectUrlStr: 'https://github.com/hmcts/ia-aip-frontend'],
     pipelineTriggers([[$class: 'GitHubPushTrigger']])]
)

@Library("Infrastructure")

def product = "ia"
def component = "aip-frontend"

def secrets = [
    'ia-${env}': [
        secret('s2s-secret', 'S2S_SECRET'),
        secret('idam-secret', 'IDAM_SECRET'),
        secret('saucelabs', 'SAUCELABS_SECRET'),
        secret('launch-darkly-sdk-key', 'LAUNCH_DARKLY_SDK_KEY'),
        secret('dm-url', 'DOC_MANAGEMENT_URL'),
        secret('addressLookupToken', 'ADDRESS_LOOKUP_TOKEN'),
        secret('test-caseofficer-username', 'TEST_CASEOFFICER_USERNAME'),
        secret('test-caseofficer-password', 'TEST_CASEOFFICER_PASSWORD'),
        secret('test-homeoffice-generic-username', 'TEST_HOMEOFFICE_GENERIC_USERNAME'),
        secret('test-homeoffice-generic-password', 'TEST_HOMEOFFICE_GENERIC_PASSWORD'),
        secret('pcq-token-key', 'PCQ_TOKEN_KEY')
    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)

withPipeline("nodejs", product, component) {

  after('checkout') { sh 'yarn cache clean' }
  after('build') { sh 'yarn build' }


loadVaultSecrets(secrets)
  enableAksStagingDeployment()
  disableLegacyDeployment()

  env.S2S_MICROSERVICE_NAME = 'iac'
  env.S2S_URL = 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal'
  env.CCD_API_URL = 'http://ccd-data-store-api-aat.service.core-compute-aat.internal'

  before("functionalTest") {
    env.IDAM_API_URL = 'https://idam-api.aat.platform.hmcts.net'
  }
}
