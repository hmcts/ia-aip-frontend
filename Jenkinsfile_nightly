#!groovy
properties([
    pipelineTriggers([cron('15 5 * * *')]),
    parameters([
        string(name: 'URL_TO_TEST', defaultValue: 'https://immigration-appeal.aat.platform.hmcts.net', description: 'The URL you want to run these tests against'),
    ])
])

@Library("Infrastructure")

def product = "ia"
def component = "aip-frontend"

def secrets = [
    'ia-${env}': [
        secret('s2s-secret', 'S2S_SECRET'),
        secret('idam-secret', 'IDAM_CLIENT_SECRET'),
        secret('saucelabs', 'SAUCELABS_SECRET'),
        secret('dm-url', 'DOC_MANAGEMENT_URL'),
        secret('addressLookupToken', 'ADDRESS_LOOKUP_TOKEN'),
        secret('test-caseofficer-username', 'TEST_CASEOFFICER_USERNAME'),
        secret('test-caseofficer-password', 'TEST_CASEOFFICER_PASSWORD'),
        secret('test-homeoffice-generic-username', 'TEST_HOMEOFFICE_GENERIC_USERNAME'),
        secret('test-homeoffice-generic-password', 'TEST_HOMEOFFICE_GENERIC_PASSWORD')
    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

withNightlyPipeline("nodejs", product, component) {
  loadVaultSecrets(secrets)
  env.TEST_URL = params.URL_TO_TEST
  enableCrossBrowserTest()
  enableSlackNotifications('#aip-tech')
  enableSecurityScan()

  env.S2S_MICROSERVICE_NAME = 'iac'
  env.S2S_URL = 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal'
  env.CCD_API_URL = 'http://ccd-data-store-api-aat.service.core-compute-aat.internal'

}
