{% set pageTitleName = i18n.pages.contactDetails.header %}
{% extends "layout.njk" %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "govuk/components/input/macro.njk" import govukInput %}

{% import "helpers/text-helpers.njk" as text %}

{% block content %}

  {% if errorList %}
    {{ govukErrorSummary({
      titleText: i18n.validationErrors.errorSummary,
      errorList: errorList
    }) }}
  {% endif %}

  {% if errors['selections'] == 0 %}
    {{ govukErrorSummary({
      titleText: i18n.validationErrors.errorSummary,
      errorList: [{
        text: i18n.validationErrors.atLeastOneOption,
        href: "#contactDetails"
      }]
    }) }}
  {% endif %}

  {% set emailHtml %}
    {{ govukInput({
      id: "email-value",
      name: "email-value",
      type: "email",
      value: contactDetails.email,
      classes: "govuk-!-width-one-third",
      label: {
        text: i18n.pages.contactDetails.enterEmail
      },
      attributes: {
        spellcheck: "false"
      },
      errorMessage: {
        text:  errors['email-value'].text
      } if errors['email-value']
    }) }}
  {% endset %}

  {% set textHtml %}
    {{ govukInput({
      id: "text-message-value",
      name: "text-message-value",
      type: "tel",
      value: contactDetails.phone,
      classes: "govuk-!-width-one-third",
      label: {
        text: i18n.pages.contactDetails.mobile
      },
      errorMessage: {
        text: errors['text-message-value'].text
      }if errors['text-message-value']
    }) }}
  {% endset %}

  <form action="/contact-details" method="post" novalidate>
    <input type="hidden" name="_csrf" value="{{ csrfToken }}">
    {{ govukCheckboxes({
      idPrefix: "contactDetails",
      name: "selections",
      fieldset: {
        legend: {
          text: i18n.pages.contactDetails.header,
          isPageHeading: true,
          classes: "govuk-fieldset__legend--xl"
        }
      },
      hint: {
        text: i18n.pages.contactDetails.hint
      },
      items: [
        {
          value: "email",
          text: i18n.pages.contactDetails.email,
          conditional: {
            html: emailHtml
          },
          checked: true if contactDetails.wantsEmail or errors['email-value']
        },
        {
          value: "text-message",
          text: i18n.pages.contactDetails.textMessage,
          conditional: {
            html: textHtml
          },
          checked: true if contactDetails.wantsSms or errors['text-message-value']
        }
      ],
      errorMessage: {
        text: i18n.validationErrors.atLeastOneOption
      } if errors['selections'] == 0
    }) }}
    {{ saveButtons() }}
  </form>

  {{ contactUs() }}

{% endblock %}
