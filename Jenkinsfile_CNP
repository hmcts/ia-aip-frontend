#!groovy
properties([
    [$class: 'GithubProjectProperty', projectUrlStr: 'https://github.com/hmcts/ia-aip-frontend'],
     pipelineTriggers([[$class: 'GitHubPushTrigger']
     ]),
    parameters([
        string(name: 'ZAP_URL_EXCLUSIONS', defaultValue: "-config globalexcludeurl.url_list.url\\(1\\).regex=\\'.*/assets/images.*\\' -config globalexcludeurl.url_list.url\\(2\\).regex=\\'.*/assets/stylesheets.*\\' -config globalexcludeurl.url_list.url\\(3\\).regex=\\'.*/assets/javascripts.*\\' -config globalexcludeurl.url_list.url\\(4\\).regex='^https?:\\/\\/.*\\/(?:.*ruxitagentjs.*)+\$' -config globalexcludeurl.url_list.url\\(5\\).regex=\\'.*terms-and-conditions.*\\' -config globalexcludeurl.url_list.url\\(6\\).regex=\\'.*privacy-policy.*\\' -config globalexcludeurl.url_list.url\\(7\\).regex=\\'.*/contact-us.*\\' -config globalexcludeurl.url_list.url\\(8\\).regex=\\'.*/login.*\\' -config globalexcludeurl.url_list.url\\(9\\).regex=\\'.*/cookies.*\\' -config globalexcludeurl.url_list.url\\(10\\).regex=\\'.*/cookie-preferences.*\\' -config globalexcludeurl.url_list.url\\(11\\).regex=\\'.*/robots.txt\\' -config globalexcludeurl.url_list.url\\(12\\).regex=\\'.*/sitemap.*\\' -config globalexcludeurl.url_list.url\\(13\\).regex=\\'.*jquery-3.4.1.min.js\\'")
    ])
])

@Library("Infrastructure")

def product = "ia"
def component = "aip-frontend"

def secrets = [
    'ia-${env}': [
        secret('s2s-secret', 'S2S_SECRET'),
        secret('idam-secret', 'IDAM_SECRET'),
        secret('saucelabs', 'SAUCELABS_SECRET'),
        secret('launch-darkly-sdk-key', 'LAUNCH_DARKLY_SDK_KEY'),
        secret('dm-url', 'DOC_MANAGEMENT_URL'),
        secret('addressLookupToken', 'ADDRESS_LOOKUP_TOKEN'),
        secret('test-caseofficer-username', 'TEST_CASEOFFICER_USERNAME'),
        secret('test-caseofficer-password', 'TEST_CASEOFFICER_PASSWORD'),
        secret('test-law-firm-share-case-a-username', 'TEST_LAW_FIRM_SHARE_CASE_A_USERNAME'),
        secret('test-law-firm-share-case-a-password', 'TEST_LAW_FIRM_SHARE_CASE_A_PASSWORD'),
        secret('test-homeoffice-generic-username', 'TEST_HOMEOFFICE_GENERIC_USERNAME'),
        secret('test-homeoffice-generic-password', 'TEST_HOMEOFFICE_GENERIC_PASSWORD'),
        secret('test-adminofficer-username', 'TEST_ADMINOFFICER_USERNAME'),
        secret('test-adminofficer-password', 'TEST_ADMINOFFICER_PASSWORD'),
        secret('test-judge-x-username', 'TEST_JUDGE_X_USERNAME'),
        secret('test-judge-x-password', 'TEST_JUDGE_X_PASSWORD'),
        secret('pcq-token-key', 'PCQ_TOKEN_KEY'),
        secret('system-username', 'IA_SYSTEM_USERNAME'),
        secret('system-password', 'IA_SYSTEM_PASSWORD'),
        secret('case-documents-api-url', 'CASE_DOCUMENT_AM_URL'),
        secret('ia-gov-notify-key', 'GOV_NOTIFY_KEY')
    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)
def urlExclusions = params.ZAP_URL_EXCLUSIONS

withPipeline("nodejs", product, component) {

  afterAlways('checkout') { sh 'yarn cache clean' }
  afterAlways('build') { sh 'yarn build' }

  loadVaultSecrets(secrets)

  enableAksStagingDeployment()
  disableLegacyDeployment()
  enableSecurityScan(urlExclusions: urlExclusions, scanType: "frontend")

  env.S2S_MICROSERVICE_NAME = 'iac'
  env.S2S_URL = 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal'
  env.CCD_API_URL = 'http://ccd-data-store-api-aat.service.core-compute-aat.internal'

  before("functionalTest") {
    env.IDAM_API_URL = 'https://idam-api.aat.platform.hmcts.net'
  }

  afterAlways('securitychecks') {
    sh """
      yarn npm audit --recursive --environment production --json > yarn-audit-known-issues.txt
    """
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'yarn-audit-known-issues.txt'
  }

}

