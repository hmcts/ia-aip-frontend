{"type":"auditAdvisory","data":{"resolution":{"id":1085062,"path":"webpack>micromatch>snapdragon>source-map-resolve>decode-uri-component","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"0.2.0","paths":["webpack>micromatch>snapdragon>source-map-resolve>decode-uri-component","webpack>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component"]}],"metadata":null,"vulnerable_versions":"<0.2.1","module_name":"decode-uri-component","severity":"low","github_advisory_id":"GHSA-w573-4hg7-7wgq","cves":["CVE-2022-38900"],"access":"public","patched_versions":">=0.2.1","cvss":{"score":0,"vectorString":null},"updated":"2022-12-01T21:56:00.000Z","recommendation":"Upgrade to version 0.2.1 or later","cwe":["CWE-20"],"found_by":null,"deleted":null,"id":1085062,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-38900\n- https://github.com/SamVerschueren/decode-uri-component/issues/5\n- https://github.com/sindresorhus/query-string/issues/345\n- https://github.com/SamVerschueren/decode-uri-component/commit/746ca5dcb6667c5d364e782d53c542830e4c10b9\n- https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.1\n- https://github.com/advisories/GHSA-w573-4hg7-7wgq","created":"2022-11-28T15:30:24.000Z","reported_by":null,"title":"decode-uri-component vulnerable to Denial of Service (DoS)","npm_advisory_id":null,"overview":"decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.","url":"https://github.com/advisories/GHSA-w573-4hg7-7wgq"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085062,"path":"webpack>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"0.2.0","paths":["webpack>micromatch>snapdragon>source-map-resolve>decode-uri-component","webpack>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component"]}],"metadata":null,"vulnerable_versions":"<0.2.1","module_name":"decode-uri-component","severity":"low","github_advisory_id":"GHSA-w573-4hg7-7wgq","cves":["CVE-2022-38900"],"access":"public","patched_versions":">=0.2.1","cvss":{"score":0,"vectorString":null},"updated":"2022-12-01T21:56:00.000Z","recommendation":"Upgrade to version 0.2.1 or later","cwe":["CWE-20"],"found_by":null,"deleted":null,"id":1085062,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-38900\n- https://github.com/SamVerschueren/decode-uri-component/issues/5\n- https://github.com/sindresorhus/query-string/issues/345\n- https://github.com/SamVerschueren/decode-uri-component/commit/746ca5dcb6667c5d364e782d53c542830e4c10b9\n- https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.1\n- https://github.com/advisories/GHSA-w573-4hg7-7wgq","created":"2022-11-28T15:30:24.000Z","reported_by":null,"title":"decode-uri-component vulnerable to Denial of Service (DoS)","npm_advisory_id":null,"overview":"decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.","url":"https://github.com/advisories/GHSA-w573-4hg7-7wgq"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085062,"path":"webpack>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"0.2.0","paths":["webpack>micromatch>snapdragon>source-map-resolve>decode-uri-component","webpack>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component"]}],"metadata":null,"vulnerable_versions":"<0.2.1","module_name":"decode-uri-component","severity":"low","github_advisory_id":"GHSA-w573-4hg7-7wgq","cves":["CVE-2022-38900"],"access":"public","patched_versions":">=0.2.1","cvss":{"score":0,"vectorString":null},"updated":"2022-12-01T21:56:00.000Z","recommendation":"Upgrade to version 0.2.1 or later","cwe":["CWE-20"],"found_by":null,"deleted":null,"id":1085062,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-38900\n- https://github.com/SamVerschueren/decode-uri-component/issues/5\n- https://github.com/sindresorhus/query-string/issues/345\n- https://github.com/SamVerschueren/decode-uri-component/commit/746ca5dcb6667c5d364e782d53c542830e4c10b9\n- https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.1\n- https://github.com/advisories/GHSA-w573-4hg7-7wgq","created":"2022-11-28T15:30:24.000Z","reported_by":null,"title":"decode-uri-component vulnerable to Denial of Service (DoS)","npm_advisory_id":null,"overview":"decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.","url":"https://github.com/advisories/GHSA-w573-4hg7-7wgq"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085062,"path":"webpack>watchpack>watchpack-chokidar2>chokidar>braces>snapdragon>source-map-resolve>decode-uri-component","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"0.2.0","paths":["webpack>micromatch>snapdragon>source-map-resolve>decode-uri-component","webpack>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component"]}],"metadata":null,"vulnerable_versions":"<0.2.1","module_name":"decode-uri-component","severity":"low","github_advisory_id":"GHSA-w573-4hg7-7wgq","cves":["CVE-2022-38900"],"access":"public","patched_versions":">=0.2.1","cvss":{"score":0,"vectorString":null},"updated":"2022-12-01T21:56:00.000Z","recommendation":"Upgrade to version 0.2.1 or later","cwe":["CWE-20"],"found_by":null,"deleted":null,"id":1085062,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-38900\n- https://github.com/SamVerschueren/decode-uri-component/issues/5\n- https://github.com/sindresorhus/query-string/issues/345\n- https://github.com/SamVerschueren/decode-uri-component/commit/746ca5dcb6667c5d364e782d53c542830e4c10b9\n- https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.1\n- https://github.com/advisories/GHSA-w573-4hg7-7wgq","created":"2022-11-28T15:30:24.000Z","reported_by":null,"title":"decode-uri-component vulnerable to Denial of Service (DoS)","npm_advisory_id":null,"overview":"decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.","url":"https://github.com/advisories/GHSA-w573-4hg7-7wgq"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085062,"path":"webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>snapdragon>source-map-resolve>decode-uri-component","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"0.2.0","paths":["webpack>micromatch>snapdragon>source-map-resolve>decode-uri-component","webpack>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component"]}],"metadata":null,"vulnerable_versions":"<0.2.1","module_name":"decode-uri-component","severity":"low","github_advisory_id":"GHSA-w573-4hg7-7wgq","cves":["CVE-2022-38900"],"access":"public","patched_versions":">=0.2.1","cvss":{"score":0,"vectorString":null},"updated":"2022-12-01T21:56:00.000Z","recommendation":"Upgrade to version 0.2.1 or later","cwe":["CWE-20"],"found_by":null,"deleted":null,"id":1085062,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-38900\n- https://github.com/SamVerschueren/decode-uri-component/issues/5\n- https://github.com/sindresorhus/query-string/issues/345\n- https://github.com/SamVerschueren/decode-uri-component/commit/746ca5dcb6667c5d364e782d53c542830e4c10b9\n- https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.1\n- https://github.com/advisories/GHSA-w573-4hg7-7wgq","created":"2022-11-28T15:30:24.000Z","reported_by":null,"title":"decode-uri-component vulnerable to Denial of Service (DoS)","npm_advisory_id":null,"overview":"decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.","url":"https://github.com/advisories/GHSA-w573-4hg7-7wgq"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085062,"path":"webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"0.2.0","paths":["webpack>micromatch>snapdragon>source-map-resolve>decode-uri-component","webpack>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component"]}],"metadata":null,"vulnerable_versions":"<0.2.1","module_name":"decode-uri-component","severity":"low","github_advisory_id":"GHSA-w573-4hg7-7wgq","cves":["CVE-2022-38900"],"access":"public","patched_versions":">=0.2.1","cvss":{"score":0,"vectorString":null},"updated":"2022-12-01T21:56:00.000Z","recommendation":"Upgrade to version 0.2.1 or later","cwe":["CWE-20"],"found_by":null,"deleted":null,"id":1085062,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-38900\n- https://github.com/SamVerschueren/decode-uri-component/issues/5\n- https://github.com/sindresorhus/query-string/issues/345\n- https://github.com/SamVerschueren/decode-uri-component/commit/746ca5dcb6667c5d364e782d53c542830e4c10b9\n- https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.1\n- https://github.com/advisories/GHSA-w573-4hg7-7wgq","created":"2022-11-28T15:30:24.000Z","reported_by":null,"title":"decode-uri-component vulnerable to Denial of Service (DoS)","npm_advisory_id":null,"overview":"decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.","url":"https://github.com/advisories/GHSA-w573-4hg7-7wgq"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085062,"path":"webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"0.2.0","paths":["webpack>micromatch>snapdragon>source-map-resolve>decode-uri-component","webpack>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","webpack>watchpack>watchpack-chokidar2>chokidar>anymatch>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component"]}],"metadata":null,"vulnerable_versions":"<0.2.1","module_name":"decode-uri-component","severity":"low","github_advisory_id":"GHSA-w573-4hg7-7wgq","cves":["CVE-2022-38900"],"access":"public","patched_versions":">=0.2.1","cvss":{"score":0,"vectorString":null},"updated":"2022-12-01T21:56:00.000Z","recommendation":"Upgrade to version 0.2.1 or later","cwe":["CWE-20"],"found_by":null,"deleted":null,"id":1085062,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-38900\n- https://github.com/SamVerschueren/decode-uri-component/issues/5\n- https://github.com/sindresorhus/query-string/issues/345\n- https://github.com/SamVerschueren/decode-uri-component/commit/746ca5dcb6667c5d364e782d53c542830e4c10b9\n- https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.1\n- https://github.com/advisories/GHSA-w573-4hg7-7wgq","created":"2022-11-28T15:30:24.000Z","reported_by":null,"title":"decode-uri-component vulnerable to Denial of Service (DoS)","npm_advisory_id":null,"overview":"decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.","url":"https://github.com/advisories/GHSA-w573-4hg7-7wgq"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085135,"path":"codeceptjs>@codeceptjs/configure>webdriverio>webdriver>request>qs","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"6.5.2","paths":["@hmcts/ia-idam-express-middleware>request>qs","codeceptjs>@codeceptjs/configure>webdriverio>webdriver>request>qs"]}],"metadata":null,"vulnerable_versions":">=6.5.0 <6.5.3","module_name":"qs","severity":"high","github_advisory_id":"GHSA-hrpp-h998-j3pp","cves":["CVE-2022-24999"],"access":"public","patched_versions":">=6.5.3","cvss":{"score":7.5,"vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"},"updated":"2022-12-06T14:32:47.000Z","recommendation":"Upgrade to version 6.5.3 or later","cwe":["CWE-1321"],"found_by":null,"deleted":null,"id":1085135,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-24999\n- https://github.com/ljharb/qs/pull/428\n- https://github.com/expressjs/express/releases/tag/4.17.3\n- https://github.com/n8tz/CVE-2022-24999\n- https://github.com/advisories/GHSA-hrpp-h998-j3pp","created":"2022-11-27T00:30:50.000Z","reported_by":null,"title":"qs vulnerable to Prototype Pollution","npm_advisory_id":null,"overview":"qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).","url":"https://github.com/advisories/GHSA-hrpp-h998-j3pp"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085137,"path":"express>qs","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"6.7.0","paths":["express>qs","dyson>body-parser>qs","dyson>express>body-parser>qs"]}],"metadata":null,"vulnerable_versions":">=6.7.0 <6.7.3","module_name":"qs","severity":"high","github_advisory_id":"GHSA-hrpp-h998-j3pp","cves":["CVE-2022-24999"],"access":"public","patched_versions":">=6.7.3","cvss":{"score":7.5,"vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"},"updated":"2022-12-06T14:32:47.000Z","recommendation":"Upgrade to version 6.7.3 or later","cwe":["CWE-1321"],"found_by":null,"deleted":null,"id":1085137,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-24999\n- https://github.com/ljharb/qs/pull/428\n- https://github.com/expressjs/express/releases/tag/4.17.3\n- https://github.com/n8tz/CVE-2022-24999\n- https://github.com/advisories/GHSA-hrpp-h998-j3pp","created":"2022-11-27T00:30:50.000Z","reported_by":null,"title":"qs vulnerable to Prototype Pollution","npm_advisory_id":null,"overview":"qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).","url":"https://github.com/advisories/GHSA-hrpp-h998-j3pp"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085137,"path":"dyson>body-parser>qs","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"6.7.0","paths":["express>qs","dyson>body-parser>qs","dyson>express>body-parser>qs"]}],"metadata":null,"vulnerable_versions":">=6.7.0 <6.7.3","module_name":"qs","severity":"high","github_advisory_id":"GHSA-hrpp-h998-j3pp","cves":["CVE-2022-24999"],"access":"public","patched_versions":">=6.7.3","cvss":{"score":7.5,"vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"},"updated":"2022-12-06T14:32:47.000Z","recommendation":"Upgrade to version 6.7.3 or later","cwe":["CWE-1321"],"found_by":null,"deleted":null,"id":1085137,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-24999\n- https://github.com/ljharb/qs/pull/428\n- https://github.com/expressjs/express/releases/tag/4.17.3\n- https://github.com/n8tz/CVE-2022-24999\n- https://github.com/advisories/GHSA-hrpp-h998-j3pp","created":"2022-11-27T00:30:50.000Z","reported_by":null,"title":"qs vulnerable to Prototype Pollution","npm_advisory_id":null,"overview":"qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).","url":"https://github.com/advisories/GHSA-hrpp-h998-j3pp"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085137,"path":"dyson>express>body-parser>qs","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"6.7.0","paths":["express>qs","dyson>body-parser>qs","dyson>express>body-parser>qs"]}],"metadata":null,"vulnerable_versions":">=6.7.0 <6.7.3","module_name":"qs","severity":"high","github_advisory_id":"GHSA-hrpp-h998-j3pp","cves":["CVE-2022-24999"],"access":"public","patched_versions":">=6.7.3","cvss":{"score":7.5,"vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"},"updated":"2022-12-06T14:32:47.000Z","recommendation":"Upgrade to version 6.7.3 or later","cwe":["CWE-1321"],"found_by":null,"deleted":null,"id":1085137,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-24999\n- https://github.com/ljharb/qs/pull/428\n- https://github.com/expressjs/express/releases/tag/4.17.3\n- https://github.com/n8tz/CVE-2022-24999\n- https://github.com/advisories/GHSA-hrpp-h998-j3pp","created":"2022-11-27T00:30:50.000Z","reported_by":null,"title":"qs vulnerable to Prototype Pollution","npm_advisory_id":null,"overview":"qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).","url":"https://github.com/advisories/GHSA-hrpp-h998-j3pp"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085141,"path":"dyson>express","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"4.17.1","paths":["express","dyson>express"]}],"metadata":null,"vulnerable_versions":"<4.17.3","module_name":"express","severity":"high","github_advisory_id":"GHSA-hrpp-h998-j3pp","cves":["CVE-2022-24999"],"access":"public","patched_versions":">=4.17.3","cvss":{"score":7.5,"vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"},"updated":"2022-12-06T14:32:47.000Z","recommendation":"Upgrade to version 4.17.3 or later","cwe":["CWE-1321"],"found_by":null,"deleted":null,"id":1085141,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-24999\n- https://github.com/ljharb/qs/pull/428\n- https://github.com/expressjs/express/releases/tag/4.17.3\n- https://github.com/n8tz/CVE-2022-24999\n- https://github.com/advisories/GHSA-hrpp-h998-j3pp","created":"2022-11-27T00:30:50.000Z","reported_by":null,"title":"qs vulnerable to Prototype Pollution","npm_advisory_id":null,"overview":"qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).","url":"https://github.com/advisories/GHSA-hrpp-h998-j3pp"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085242,"path":"jsonwebtoken","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"8.5.1","paths":["jsonwebtoken"]}],"metadata":null,"vulnerable_versions":"<=8.5.1","module_name":"jsonwebtoken","severity":"moderate","github_advisory_id":"GHSA-hjrf-2m68-5959","cves":["CVE-2022-23541"],"access":"public","patched_versions":">=9.0.0","cvss":{"score":0,"vectorString":null},"updated":"2022-12-22T03:33:20.000Z","recommendation":"Upgrade to version 9.0.0 or later","cwe":["CWE-287","CWE-1259"],"found_by":null,"deleted":null,"id":1085242,"references":"- https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-hjrf-2m68-5959\n- https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3\n- https://github.com/advisories/GHSA-hjrf-2m68-5959","created":"2022-12-22T03:33:19.000Z","reported_by":null,"title":"jsonwebtoken's insecure implementation of key retrieval function could lead to Forgeable Public/Private Tokens from RSA to HMAC","npm_advisory_id":null,"overview":"# Overview\n\nVersions `<=8.5.1` of `jsonwebtoken` library can be misconfigured so that passing a poorly implemented key retrieval function (referring to the `secretOrPublicKey` argument from the [readme link](https://github.com/auth0/node-jsonwebtoken#jwtverifytoken-secretorpublickey-options-callback)) will result in incorrect verification of tokens. There is a possibility of using a different algorithm and key combination in verification  than the one that was used to sign the tokens. Specifically, tokens signed with an asymmetric public key could be verified with a symmetric HS256 algorithm. This can lead to successful validation of forged tokens. \n\n# Am I affected?\n\nYou will be affected if your application is supporting usage of both symmetric key and asymmetric key in jwt.verify() implementation with the same key retrieval function. \n\n# How do I fix it?\n \nUpdate to version 9.0.0\n\n# Will the fix impact my users?\n\nThere is no impact for end users","url":"https://github.com/advisories/GHSA-hjrf-2m68-5959"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085243,"path":"jsonwebtoken","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"8.5.1","paths":["jsonwebtoken"]}],"metadata":null,"vulnerable_versions":"<=8.5.1","module_name":"jsonwebtoken","severity":"moderate","github_advisory_id":"GHSA-qwph-4952-7xr6","cves":["CVE-2022-23540"],"access":"public","patched_versions":">=9.0.0","cvss":{"score":0,"vectorString":null},"updated":"2022-12-22T03:33:00.000Z","recommendation":"Upgrade to version 9.0.0 or later","cwe":["CWE-287"],"found_by":null,"deleted":null,"id":1085243,"references":"- https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-qwph-4952-7xr6\n- https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3\n- https://github.com/advisories/GHSA-qwph-4952-7xr6","created":"2022-12-22T03:32:59.000Z","reported_by":null,"title":"jsonwebtoken vulnerable to signature validation bypass due to insecure default algorithm in jwt.verify()","npm_advisory_id":null,"overview":"# Overview\n\nIn versions `<=8.5.1` of `jsonwebtoken` library, lack of algorithm definition in the `jwt.verify()` function can lead to signature validation bypass due to defaulting to the `none` algorithm for signature verification. \n\n# Am I affected?\n\nYou will be affected if you do not specify algorithms in the `jwt.verify()` function\n\n# How do I fix it?\n \nUpdate to version 9.0.0 which removes the default support for the none algorithm in the `jwt.verify()` method. \n\n# Will the fix impact my users?\n\nThere will be no impact, if you update to version 9.0.0 and you don’t need to allow for the `none` algorithm. If you need 'none' algorithm, you have to explicitly specify that in `jwt.verify()` options.\n","url":"https://github.com/advisories/GHSA-qwph-4952-7xr6"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085244,"path":"jsonwebtoken","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"8.5.1","paths":["jsonwebtoken"]}],"metadata":null,"vulnerable_versions":"<=8.5.1","module_name":"jsonwebtoken","severity":"moderate","github_advisory_id":"GHSA-8cf7-32gw-wr33","cves":["CVE-2022-23539"],"access":"public","patched_versions":">=9.0.0","cvss":{"score":0,"vectorString":null},"updated":"2022-12-22T03:32:25.000Z","recommendation":"Upgrade to version 9.0.0 or later","cwe":["CWE-327"],"found_by":null,"deleted":null,"id":1085244,"references":"- https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-8cf7-32gw-wr33\n- https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3\n- https://github.com/advisories/GHSA-8cf7-32gw-wr33","created":"2022-12-22T03:32:22.000Z","reported_by":null,"title":"jsonwebtoken unrestricted key type could lead to legacy keys usage ","npm_advisory_id":null,"overview":"# Overview\n\nVersions `<=8.5.1` of `jsonwebtoken` library could be misconfigured so that legacy, insecure key types are used for signature verification. For example, DSA keys could be used with the RS256 algorithm. \n\n# Am I affected?\n\nYou are affected if you are using an algorithm and a key type other than the combinations mentioned below\n\n| Key type |  algorithm                                    |\n|----------|------------------------------------------|\n| ec           | ES256, ES384, ES512                      |\n| rsa          | RS256, RS384, RS512, PS256, PS384, PS512 |\n| rsa-pss  | PS256, PS384, PS512                      |\n\nAnd for Elliptic Curve algorithms:\n\n| `alg` | Curve      |\n|-------|------------|\n| ES256 | prime256v1 |\n| ES384 | secp384r1  |\n| ES512 | secp521r1  |\n\n# How do I fix it?\n\nUpdate to version 9.0.0. This version validates for asymmetric key type and algorithm combinations. Please refer to the above mentioned algorithm / key type combinations for the valid secure configuration. After updating to version 9.0.0, If you still intend to continue with signing or verifying tokens using invalid key type/algorithm value combinations, you’ll need to set the `allowInvalidAsymmetricKeyTypes` option  to `true` in the `sign()` and/or `verify()` functions.\n\n# Will the fix impact my users?\n\nThere will be no impact, if you update to version 9.0.0 and you already use a valid secure combination of key type and algorithm. Otherwise,  use the  `allowInvalidAsymmetricKeyTypes` option  to `true` in the `sign()` and `verify()` functions to continue usage of invalid key type/algorithm combination in 9.0.0 for legacy compatibility. \n\n","url":"https://github.com/advisories/GHSA-8cf7-32gw-wr33"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085245,"path":"jsonwebtoken","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"8.5.1","paths":["jsonwebtoken"]}],"metadata":null,"vulnerable_versions":"<=8.5.1","module_name":"jsonwebtoken","severity":"high","github_advisory_id":"GHSA-27h2-hvpr-p74q","cves":["CVE-2022-23529"],"access":"public","patched_versions":">=9.0.0","cvss":{"score":0,"vectorString":null},"updated":"2022-12-22T03:31:29.000Z","recommendation":"Upgrade to version 9.0.0 or later","cwe":["CWE-20"],"found_by":null,"deleted":null,"id":1085245,"references":"- https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-27h2-hvpr-p74q\n- https://nvd.nist.gov/vuln/detail/CVE-2022-23529\n- https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3\n- https://github.com/advisories/GHSA-27h2-hvpr-p74q","created":"2022-12-22T03:31:28.000Z","reported_by":null,"title":"jsonwebtoken has insecure input validation in jwt.verify function","npm_advisory_id":null,"overview":"# Overview\n\nFor versions `<=8.5.1` of `jsonwebtoken` library, if a malicious actor has the ability to modify the key retrieval parameter (referring to the `secretOrPublicKey` argument from the [readme link](https://github.com/auth0/node-jsonwebtoken#jwtverifytoken-secretorpublickey-options-callback)) of the `jwt.verify()` function, they can gain remote code execution (RCE).\n\n# Am I affected?\n\nYou are affected only if you allow untrusted entities to modify the key retrieval parameter of the `jwt.verify()`  on a host that you control. \n\n# How do I fix it?\n\nUpdate to version 9.0.0\n\n# Will the fix impact my users?\n\nThe fix has no impact on end users.\n\n# Credits\n\n[Palo Alto Networks](https://www.paloaltonetworks.com/)","url":"https://github.com/advisories/GHSA-27h2-hvpr-p74q"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085141,"path":"express","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"4.17.1","paths":["express","dyson>express"]}],"metadata":null,"vulnerable_versions":"<4.17.3","module_name":"express","severity":"high","github_advisory_id":"GHSA-hrpp-h998-j3pp","cves":["CVE-2022-24999"],"access":"public","patched_versions":">=4.17.3","cvss":{"score":7.5,"vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"},"updated":"2022-12-06T14:32:47.000Z","recommendation":"Upgrade to version 4.17.3 or later","cwe":["CWE-1321"],"found_by":null,"deleted":null,"id":1085141,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-24999\n- https://github.com/ljharb/qs/pull/428\n- https://github.com/expressjs/express/releases/tag/4.17.3\n- https://github.com/n8tz/CVE-2022-24999\n- https://github.com/advisories/GHSA-hrpp-h998-j3pp","created":"2022-11-27T00:30:50.000Z","reported_by":null,"title":"qs vulnerable to Prototype Pollution","npm_advisory_id":null,"overview":"qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).","url":"https://github.com/advisories/GHSA-hrpp-h998-j3pp"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1070480,"path":"multer>busboy>dicer","dev":false,"bundled":false,"optional":false},"advisory":{"findings":[{"version":"0.2.5","paths":["multer>busboy>dicer"]}],"metadata":null,"vulnerable_versions":"<=0.3.1","module_name":"dicer","severity":"high","github_advisory_id":"GHSA-wm7h-9275-46v2","cves":["CVE-2022-24434"],"access":"public","patched_versions":"<0.0.0","cvss":{"score":7.5,"vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"},"updated":"2022-06-08T18:17:38.000Z","recommendation":"None","cwe":["CWE-248"],"found_by":null,"deleted":null,"id":1070480,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-24434\n- https://github.com/mscdex/busboy/issues/250\n- https://github.com/mscdex/dicer/pull/22\n- https://github.com/mscdex/dicer/pull/22/commits/b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac\n- https://snyk.io/vuln/SNYK-JS-DICER-2311764\n- https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2838865\n- https://github.com/advisories/GHSA-wm7h-9275-46v2","created":"2022-05-21T00:00:25.000Z","reported_by":null,"title":"Crash in HeaderParser in dicer","npm_advisory_id":null,"overview":"This affects all versions of package dicer. A malicious attacker can send a modified form to server, and crash the nodejs service. A complete denial of service can be achived by sending the malicious form in a loop.","url":"https://github.com/advisories/GHSA-wm7h-9275-46v2"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085135,"path":"@hmcts/ia-idam-express-middleware>request>qs","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"6.5.2","paths":["@hmcts/ia-idam-express-middleware>request>qs","codeceptjs>@codeceptjs/configure>webdriverio>webdriver>request>qs"]}],"metadata":null,"vulnerable_versions":">=6.5.0 <6.5.3","module_name":"qs","severity":"high","github_advisory_id":"GHSA-hrpp-h998-j3pp","cves":["CVE-2022-24999"],"access":"public","patched_versions":">=6.5.3","cvss":{"score":7.5,"vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"},"updated":"2022-12-06T14:32:47.000Z","recommendation":"Upgrade to version 6.5.3 or later","cwe":["CWE-1321"],"found_by":null,"deleted":null,"id":1085135,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-24999\n- https://github.com/ljharb/qs/pull/428\n- https://github.com/expressjs/express/releases/tag/4.17.3\n- https://github.com/n8tz/CVE-2022-24999\n- https://github.com/advisories/GHSA-hrpp-h998-j3pp","created":"2022-11-27T00:30:50.000Z","reported_by":null,"title":"qs vulnerable to Prototype Pollution","npm_advisory_id":null,"overview":"qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).","url":"https://github.com/advisories/GHSA-hrpp-h998-j3pp"}}}
